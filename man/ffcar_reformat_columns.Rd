% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R03-Tables.R
\name{ffcar_reformat_columns}
\alias{ffcar_reformat_columns}
\title{Reformat Columns in Data Frame}
\usage{
ffcar_reformat_columns(
  dtf_results,
  vec_columns,
  chr_template = NULL,
  fun_transform = NULL,
  int_digits = NULL,
  lgc_pad = TRUE,
  chr_common = "estimate and standard error"
)
}
\arguments{
\item{dtf_results}{A data frame with the values to format.}

\item{vec_columns}{A vector of column indices, either
integers or character strings.}

\item{chr_template}{A character string giving the desired
format of results. Specify columns using \code{'[[CX]]'}
where X refers to the column number. See
\link{ffcar_unicode_lookup} for more details.}

\item{fun_transform}{A function, an optional transformation
to apply before formatting (e.g., applying the \code{exp}
function to convert log-odds to odds ratios).}

\item{int_digits}{An integer vector giving the number of
digits to round to for each extracted column.}

\item{chr_common}{A character string, allows quick specification
of some common templates (uncertainty intervals,
estimates and standard errors, frequencies and percentages,
p-values).}
}
\value{
A data frame.
}
\description{
Function to reformat columns in a data frame of results
(e.g., combining different columns into nicely formatted
character strings of results).
}
\examples{
dtf_results <- data.frame(
  Estimate.raw = rnorm( 3 ),
  SE.raw = exp( rnorm( 3 ) )
)
dtf_results$P_value.raw <- pnorm(
  abs( dtf_results$Estimate )/dtf_results$SE.raw, lower.tail = FALSE
)*2
dtf_results$Test <- ffcar_reformat_columns(
  dtf_results, 1:3,
  '[[GLb]] = [[C1]] (SE = [[C2]]), p = [[C3]]',
  int_digits = c( 2, 2, 3 )
)
print( dtf_results )

}
