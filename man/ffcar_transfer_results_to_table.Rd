% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R01-Utilities.R
\name{ffcar_transfer_results_to_table}
\alias{ffcar_transfer_results_to_table}
\title{Transfer Results From List to Table}
\usage{
ffcar_transfer_results_to_table(
  lst_results,
  dtf_table,
  obj_rows,
  obj_columns,
  obj_labels
)
}
\arguments{
\item{lst_results}{A list with matrices containing the
result summaries.}

\item{dtf_table}{A data frame, the table to add the
results to.}

\item{obj_rows}{Either (a) an integer vector specifying
the rows to index from each matrix in \code{lst_results},
or (b) if different rows should be extracted for each matrix,
a list matching in length to \code{lst_results} with the
specific rows to index per each matrix.}

\item{obj_columns}{Either (a) an integer vector specifying
the columns to index from each matrix in \code{lst_results},
or (b) if different columns should be extracted for each matrix,
a list matching in length to \code{lst_results} with the
specific columns to index per each matrix.}

\item{obj_labels}{Either (a) a character vector specifying
the columns to update in \code{dtf_table}, or (b) if
different columns in \code{dtf_table} should be updated
for each matrix in \code{lst_results}, a list matching in
length to \code{lst_results} with the specific columns to update.}
}
\value{
A data frame.
}
\description{
Given a list with multiple summaries of model estimates,
transfers specified rows and columns to a new data frame.
Useful, for example, if multiple summaries for
\code{lm} or \code{glm} objects exist and a user wants
the summaries in a single table.
}
\examples{
# List of matrices with regression results
lst_results <- list(
  wt = summary( lm( mpg ~ wt, data = mtcars ) )$coefficients,
  cyl = summary( lm( mpg ~ cyl, data = mtcars ) )$coefficients,
  hp = summary( lm( mpg ~ hp, data = mtcars ) )$coefficients
)

dtf_table <- data.frame(
  Estimate = NA,
  SE = NA,
  P_value = NA
)

dtf_table <- ffcar_transfer_results_to_table(
  lst_results, dtf_table,
  obj_rows = 2, obj_columns = c(1:2, 4),
  obj_labels = c( 'Estimate', 'SE', 'P_value' )
)

}
